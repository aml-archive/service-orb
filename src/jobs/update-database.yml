description: >
  Uses Liquibase to update a database

executor: machine

parameters:
  azure-sp:
    type: env_var_name
    default: AZURE_SP
    description: >
      Name of environment variable storing the full name of the Service Principal, in the form http://app-url
  azure-sp-password:
    type: env_var_name
    default: AZURE_SP_PASSWORD
    description: >
      Name of environment variable storing the password for the Service Principal
  azure-sp-tenant:
    type: env_var_name
    default: AZURE_SP_TENANT
    description: >
      Name of environment variable storing the tenant ID for the Service Principal
  db-server:
    type: string
    description: >
      Name of database server
  db-password:
    type: env_var_name
    description: >
      Name of environment variable storing the database password
  change-log-file:
    type: string
    default: ./.circleci/db-changelog.yml
    description: >
      The Liquibase change log file to apply
  resource-group:
    type: string
    default: storage
    description: >
      Azure resource group the database belongs to
  subscription:
    type: enum
    enum: ["Staging", "Production"]
    description: >
      Azure subscription the database belongs to

steps:
  - azure-cli/install
  - azure-cli/login-with-service-principal
  - checkout
  - run:
      name: Add firewall rule
      command: |
        machine_ip=$(wget -qO- http://checkip.amazonaws.com)
        az sql server firewall-rule create \
          --name CircleCI-${CIRCLE_PROJECT_REPONAME} \
          --resource-group << parameters.resource-group >> \
          --subscription << parameters.subscription >> \
          --server << parameters.db-server >> \
          --start-ip-address $machine_ip --end-ip-address $machine_ip
  - run:
      name: Update database
      command: |
        docker run -v $PWD:/liquibase/changelog liquibase/liquibase \
          --url="jdbc:sqlserver://<< parameters.db-server >>.database.windows.net:1433;database=ticc;" \
          --username=app@ticc@<< parameters.db-server >> \
          --password=$<< parameters.db-password >> \
          --changeLogFile=<< parameters.change-log-file >> \
          update
  - run:
      name: Delete firewall rule
      command: |
        public_ip=$(wget -qO- http://checkip.amazonaws.com)
        az sql server firewall-rule delete \
          --name CircleCI-${CIRCLE_PROJECT_REPONAME} \
          --resource-group << parameters.resource-group >> \
          --subscription << parameters.subscription >> \
          --server << parameters.db-server >>
      when: always
