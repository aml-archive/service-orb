description: >
  Builds and publishes the microservice as a Docker image

executor: machine

parameters:
  github-user:
    type: env_var_name
    default: GITHUB_USER
    description: >
      The name of the environment variable containing the Github login user
  github-password:
    type: env_var_name
    default: GITHUB_PASSWORD
    description: >
      The name of the environment variable containing the Github login password
  buf-user:
    type: env_var_name
    default: BUF_USER
    description: >
      The name of the environment variable containing the Buf login user
  buf-password:
    type: env_var_name
    default: BUF_PASSWORD
    description: >
      The name of the environment variable containing the Buf login password
  docker-user:
    type: env_var_name
    default: DOCKER_USER
    description: >
      The name of the environment variable containing the Docker login user
  docker-password:
    type: env_var_name
    default: DOCKER_PASSWORD
    description: >
      The name of the environment variable containing the Docker login password
  docker-server:
    type: string
    default: "ghcr.io/avidaml"
    description: >
      Docker container registry
  docker-repo:
    type: string
    default: ${CIRCLE_PROJECT_REPONAME}
    description: >
      Docker container repo name
  tag:
    type: string
    default: latest
    description: >
      Tag to apply to the image

steps:
  - checkout
  - run:
      name: Build image
      command: |
        NETRC=$(\<<- EOF
          machine github.com login $<< parameters.github-user >> password $<< parameters.github-password >>
          machine github.com login $<< parameters.github-user >> password $<< parameters.github-password >>
        EOF
        )
        docker build --build-arg NETRC=$NETRC --tag ${CIRCLE_PROJECT_REPONAME} .
  - run:
      name: Push image
      command: |
        echo $<< parameters.docker-password >> | docker login << parameters.docker-server >> -u $<< parameters.docker-user >> --password-stdin
        docker tag << parameters.docker-repo >> << parameters.docker-server >>/<< parameters.docker-repo >>:<< parameters.tag >>
        docker push << parameters.docker-server >>/<< parameters.docker-repo >>:<< parameters.tag >>
